// <auto-generated />
using System;
using Artech_API_370.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Artech_API_370.Migrations
{
    [DbContext(typeof(ArtechDbContext))]
    [Migration("20210902005729_fullMigration")]
    partial class fullMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ArtClass", b =>
                {
                    b.Property<int>("ArtClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtClassDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArtClassEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ArtClassEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArtClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArtClassStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ArtClassStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ArtClassTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ClassLimit")
                        .HasColumnType("int");

                    b.Property<double>("ClassPrice")
                        .HasColumnType("float");

                    b.Property<int>("ClassTeacherID")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("RefundDayLimit")
                        .HasColumnType("int");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("ArtClassID");

                    b.HasIndex("ArtClassTypeID");

                    b.HasIndex("ClassTeacherID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("VenueID");

                    b.ToTable("ArtClasse");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ArtClassAnnouncement", b =>
                {
                    b.Property<int>("ArtClassAnnouncementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtClassAnnouncementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtClassID")
                        .HasColumnType("int");

                    b.HasKey("ArtClassAnnouncementID");

                    b.HasIndex("ArtClassID");

                    b.ToTable("ArtClassAnnouncement");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ArtClassType", b =>
                {
                    b.Property<int>("ArtClassTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtClassTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtClassTypeID");

                    b.ToTable("ArtClassType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ClassTeacher", b =>
                {
                    b.Property<int>("ClassTeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherPhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("TeacherSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherTypeID")
                        .HasColumnType("int");

                    b.HasKey("ClassTeacherID");

                    b.HasIndex("TeacherTypeID");

                    b.ToTable("ClassTeacher");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.Feedback", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtClassID")
                        .HasColumnType("int");

                    b.Property<double>("DifficultyRating")
                        .HasColumnType("float");

                    b.Property<string>("FeedbackComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OverallRating")
                        .HasColumnType("float");

                    b.Property<double>("TeacherRating")
                        .HasColumnType("float");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FeedbackID");

                    b.HasIndex("ArtClassID");

                    b.HasIndex("UserID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.TeacherType", b =>
                {
                    b.Property<int>("TeacherTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeacherTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherTypeID");

                    b.ToTable("TeacherType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artists.Invitation", b =>
                {
                    b.Property<int>("InvitationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExhibitionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvitationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvitationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvitationStatusID")
                        .HasColumnType("int");

                    b.HasKey("InvitationID");

                    b.HasIndex("ExhibitionID");

                    b.HasIndex("InvitationStatusID");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artists.InvitationStatus", b =>
                {
                    b.Property<int>("InvitationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InvitationStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvitationStatusID");

                    b.ToTable("InvitationStatus");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.Artwork", b =>
                {
                    b.Property<int>("ArtworkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtworkDimensionID")
                        .HasColumnType("int");

                    b.Property<double>("ArtworkPrice")
                        .HasColumnType("float");

                    b.Property<int>("ArtworkStatusID")
                        .HasColumnType("int");

                    b.Property<string>("ArtworkTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtworkTypeID")
                        .HasColumnType("int");

                    b.Property<int>("FrameColourID")
                        .HasColumnType("int");

                    b.Property<int>("ImageID")
                        .HasColumnType("int");

                    b.Property<int>("MediumTypeID")
                        .HasColumnType("int");

                    b.Property<int>("SurfaceTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ArtworkID");

                    b.HasIndex("ArtworkDimensionID");

                    b.HasIndex("ArtworkStatusID");

                    b.HasIndex("ArtworkTypeID");

                    b.HasIndex("FrameColourID");

                    b.HasIndex("ImageID");

                    b.HasIndex("MediumTypeID");

                    b.HasIndex("SurfaceTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("Artwork");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.ArtworkDimension", b =>
                {
                    b.Property<int>("ArtworkDimensionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtworkDimensionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtworkDimensionID");

                    b.ToTable("ArtworkDimension");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.ArtworkStatus", b =>
                {
                    b.Property<int>("ArtworkStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtworkStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtworkStatusID");

                    b.ToTable("ArtworkStatus");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.ArtworkType", b =>
                {
                    b.Property<int>("ArtworkTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtworkTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtworkTypeID");

                    b.ToTable("ArtworkType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.FrameColour", b =>
                {
                    b.Property<int>("FrameColourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrameColourDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FrameColourID");

                    b.ToTable("FrameColour");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.MediumType", b =>
                {
                    b.Property<int>("MediumTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MediumTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediumTypeID");

                    b.ToTable("MediumType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.SurfaceType", b =>
                {
                    b.Property<int>("SurfaceTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SurfaceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SurfaceTypeID");

                    b.ToTable("SurfaceType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExhibitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExhibitionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExhibitionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExhibitionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExhibitionTypeID")
                        .HasColumnType("int");

                    b.Property<int>("ImageID")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleID")
                        .HasColumnType("int");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("ExhibitionID");

                    b.HasIndex("ExhibitionTypeID");

                    b.HasIndex("ImageID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("ScheduleID");

                    b.HasIndex("VenueID");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.ApplicationStatus", b =>
                {
                    b.Property<int>("ApplicationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationStatusID");

                    b.ToTable("ApplicationStatus");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.ExhibitionApplication", b =>
                {
                    b.Property<int>("ExhibitionApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("ExhibitionID")
                        .HasColumnType("int");

                    b.Property<int?>("ImageID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ExhibitionApplicationID");

                    b.HasIndex("ApplicationStatusID");

                    b.HasIndex("ExhibitionID");

                    b.HasIndex("ImageID");

                    b.HasIndex("UserID");

                    b.ToTable("ExhibitionApplication");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.ExhibitionType", b =>
                {
                    b.Property<int>("ExhibitionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExhibitionTypeDecription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionTypeID");

                    b.ToTable("ExhibitionType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.Organisation", b =>
                {
                    b.Property<int>("OrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganisationalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationalName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganisationID");

                    b.ToTable("Organisation");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleTypeID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID");

                    b.HasIndex("ScheduleTypeID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.ScheduleType", b =>
                {
                    b.Property<int>("ScheduleTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ScheduleTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleTypeID");

                    b.ToTable("ScheduleType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.Venue", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VenueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VenueID");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Images.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ImageContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ImageTypeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.HasIndex("ImageTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Images.ImageType", b =>
                {
                    b.Property<int>("ImageTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageTypeID");

                    b.ToTable("ImageType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Payments.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentStatusID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RefundID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("BookingID");

                    b.HasIndex("PaymentStatusID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("RefundID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Payments.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentStatusID");

                    b.ToTable("PaymentStatus");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Payments.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTypeID");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Payments.Refund", b =>
                {
                    b.Property<int>("RefundID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefundStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefundID");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Announcement", b =>
                {
                    b.Property<int>("AnnouncementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnnouncementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnouncementTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnnouncementID");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("CityID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Privileges", b =>
                {
                    b.Property<int>("PrivilegesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrivilegeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivilegeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrivilegesID");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Province", b =>
                {
                    b.Property<int>("ProvinceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceID");

                    b.HasIndex("CountryID");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Suburb", b =>
                {
                    b.Property<int>("SuburbID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("SuburbName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuburbID");

                    b.HasIndex("CityID");

                    b.ToTable("Suburb");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistBio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuburbID")
                        .HasColumnType("int");

                    b.Property<string>("UserAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserPostalCode")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("SuburbID");

                    b.HasIndex("UserTypeID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PrivilegesID")
                        .HasColumnType("int");

                    b.Property<string>("UserRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserTypeID");

                    b.HasIndex("PrivilegesID");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("Artech_API_370.Exhibitions.ExhibitionAnnouncement", b =>
                {
                    b.Property<int>("ExhibitionAnnouncementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExhibitionAnnouncementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExhibitionID")
                        .HasColumnType("int");

                    b.HasKey("ExhibitionAnnouncementID");

                    b.HasIndex("ExhibitionID");

                    b.ToTable("ExhibitionAnnouncement");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Bookings.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtClassID")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BookingNotificationID")
                        .HasColumnType("int");

                    b.Property<string>("BookingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("ArtClassID");

                    b.HasIndex("BookingNotificationID");

                    b.HasIndex("UserID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Bookings.BookingNotification", b =>
                {
                    b.Property<int>("BookingNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookNotificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingNotificationID");

                    b.ToTable("BookingNotification");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ArtClass", b =>
                {
                    b.HasOne("Artech_API_370.Entities.ArtClasses.ArtClassType", "ArtClassType")
                        .WithMany()
                        .HasForeignKey("ArtClassTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.ArtClasses.ClassTeacher", "ClassTeacher")
                        .WithMany()
                        .HasForeignKey("ClassTeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Exhibitions.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Exhibitions.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtClassType");

                    b.Navigation("ClassTeacher");

                    b.Navigation("Organisation");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ArtClassAnnouncement", b =>
                {
                    b.HasOne("Artech_API_370.Entities.ArtClasses.ArtClass", "ArtClass")
                        .WithMany()
                        .HasForeignKey("ArtClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtClass");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.ClassTeacher", b =>
                {
                    b.HasOne("Artech_API_370.Entities.ArtClasses.TeacherType", "TeacherType")
                        .WithMany()
                        .HasForeignKey("TeacherTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.ArtClasses.Feedback", b =>
                {
                    b.HasOne("Artech_API_370.Entities.ArtClasses.ArtClass", "ArtClass")
                        .WithMany()
                        .HasForeignKey("ArtClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtClass");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artists.Invitation", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Exhibition", "Exhibition")
                        .WithMany()
                        .HasForeignKey("ExhibitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artists.InvitationStatus", "InvitationStatus")
                        .WithMany()
                        .HasForeignKey("InvitationStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibition");

                    b.Navigation("InvitationStatus");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Artworks.Artwork", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Artworks.ArtworkDimension", "ArtworkDimension")
                        .WithMany()
                        .HasForeignKey("ArtworkDimensionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artworks.ArtworkStatus", "ArtworkStatus")
                        .WithMany()
                        .HasForeignKey("ArtworkStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artworks.ArtworkType", "ArtworkType")
                        .WithMany()
                        .HasForeignKey("ArtworkTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artworks.FrameColour", "FrameColour")
                        .WithMany()
                        .HasForeignKey("FrameColourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Images.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artworks.MediumType", "MediumType")
                        .WithMany()
                        .HasForeignKey("MediumTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Artworks.SurfaceType", "SurfaceType")
                        .WithMany()
                        .HasForeignKey("SurfaceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("ArtworkDimension");

                    b.Navigation("ArtworkStatus");

                    b.Navigation("ArtworkType");

                    b.Navigation("FrameColour");

                    b.Navigation("Image");

                    b.Navigation("MediumType");

                    b.Navigation("SurfaceType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibition", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Exhibitions.ExhibitionType", "ExhibitionType")
                        .WithMany()
                        .HasForeignKey("ExhibitionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Images.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Exhibitions.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Exhibitions.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Exhibitions.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExhibitionType");

                    b.Navigation("Image");

                    b.Navigation("Organisation");

                    b.Navigation("Schedule");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.ExhibitionApplication", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Exhibitions.ApplicationStatus", "ApplicationStatus")
                        .WithMany()
                        .HasForeignKey("ApplicationStatusID");

                    b.HasOne("Artech_API_370.Entities.Exhibition", "Exhibition")
                        .WithMany()
                        .HasForeignKey("ExhibitionID");

                    b.HasOne("Artech_API_370.Entities.Images.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID");

                    b.HasOne("Artech_API_370.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("ApplicationStatus");

                    b.Navigation("Exhibition");

                    b.Navigation("Image");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Exhibitions.Schedule", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Exhibitions.ScheduleType", "ScheduleType")
                        .WithMany()
                        .HasForeignKey("ScheduleTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Images.Image", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Images.ImageType", "ImageType")
                        .WithMany()
                        .HasForeignKey("ImageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Payments.Payment", b =>
                {
                    b.HasOne("BinaryBrainsAPI.Entities.Bookings.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Payments.PaymentStatus", "PaymentStatus")
                        .WithMany()
                        .HasForeignKey("PaymentStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Payments.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Payments.Refund", "Refund")
                        .WithMany()
                        .HasForeignKey("RefundID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("PaymentStatus");

                    b.Navigation("PaymentType");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.City", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Users.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Province", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Users.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.Suburb", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Users.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.User", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Users.Suburb", "Suburb")
                        .WithMany()
                        .HasForeignKey("SuburbID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artech_API_370.Entities.Users.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suburb");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Artech_API_370.Entities.Users.UserType", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Users.Privileges", "Privileges")
                        .WithMany()
                        .HasForeignKey("PrivilegesID");

                    b.Navigation("Privileges");
                });

            modelBuilder.Entity("Artech_API_370.Exhibitions.ExhibitionAnnouncement", b =>
                {
                    b.HasOne("Artech_API_370.Entities.Exhibition", "Exhibition")
                        .WithMany()
                        .HasForeignKey("ExhibitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("BinaryBrainsAPI.Entities.Bookings.Booking", b =>
                {
                    b.HasOne("Artech_API_370.Entities.ArtClasses.ArtClass", "ArtClass")
                        .WithMany()
                        .HasForeignKey("ArtClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinaryBrainsAPI.Entities.Bookings.BookingNotification", "BookingNotification")
                        .WithMany()
                        .HasForeignKey("BookingNotificationID");

                    b.HasOne("Artech_API_370.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtClass");

                    b.Navigation("BookingNotification");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
